import PyPDF2
import re
import datetime

from fitness import Fitness
import toolBox

def evaluateTimetable():
    ''' Evaluates how well a current static timetable does in terms of waiting time. The purpose is to give some kind of
    comparison metric with the timetable as generated by GA.
    '''

    pdfFileObj = open('H1_web.pdf', 'rb')
    pdfReader = PyPDF2.PdfFileReader(pdfFileObj)
    numPages = pdfReader.numPages
    pagesText = []

    for i in range(2):
        pdfReader = PyPDF2.PdfFileReader(pdfFileObj)
        pageObj = pdfReader.getPage(i)
        txt = pageObj.extractText()
        timeRegex = re.compile(r'\d{2}\.\d{2}')   # escape dot to match
        mo = timeRegex.findall(txt)
        pagesText += mo

    departures = list()
    for index in range(len(pagesText)):
        if index % 4 == 0:
            for i in range(4):
                departures.append(pagesText[index+i])

    departures[:] = sorted(['2015 12 07 ' + x for x in departures])
    individual = list()
    for t in departures:
        individual.append([1, 120, 1, datetime.datetime.strptime(t, '%Y %m %d %H.%M')]) 

    ind = []
    for q in range(len(individual)):
        try:
            if q % 4 == 0:
                t = []
                for x in range(4):
                    t += individual[q+x]
                ind.append(t)
        except IndexError, e:
            t = []
            for x in range(4):
                t += individual[x+0]
            ind.append(t)

    print ind
    #return toolBox.evaluateNewIndividualFormat(individual)

if __name__ == "__main__":
    evaluateTimetable()
